This document is a wishlist for (reasonable) features and changes to Tor that
would be useful for Torsion. Feel free to go wild with any of them.

Hidden services without filesystem directories
    https://trac.torproject.org/projects/tor/ticket/1949
    
    This will enable Torsion to manage the hidden service keys, and to encrypt
    them along with user information. Provides a vast improvement to local
    security for users who don't already have robust encryption set up.
    
    This also enables Torsion to work with Tor when running as a different
    user, which is something that Tor is currently very unhappy about (due to
    permissions on the hidden service dir).

Reliable controller notification of specific configuration changes
    In environments with multiple controllers on the same Tor instance
    (notably Vidalia), configuration changes made by Torsion can be overwritten
    silently with the SETCONF command - potentially resulting in the accidental
    removal of a Torsion service. The ideal solution for this would be a
    control event sent after any change to the configuration, including the
    specific key and value changed. An event sent after any SETCONF command
    would also be acceptable.

Research issues with to publishing multiple hidden services from a Tor instance
    Not much research has been done into issues that may arise when publishing
    multiple hidden services from the same connection (or Tor instance).
    Potential problems include the ability to recognize that these services are
    published from the same location, or being used to make other attacks on
    hidden services more effective.
    
    Particular areas to focus here are on publication time, the status of
    connectivity, intro points and circuits, and how easily activity on one
    service could be detected by a connection to another service.
    
    One known issue at present is that upon configuration (such as startup),
    Tor will publish all descriptors immediately, and include the precise
    timestamp (i.e., multiple services will be published at the same time, and
    with the same timestamp). This only applies to the initial descriptor; the
    times will jitter significantly afterwards.

Improved handling of hidden service descriptors & privacy issues
    Every RendPostPeriod (1 hour by default), Tor updates the
    hidden service descriptor and uploads it to the directories.
    
    A second-resolution timestamp from the system clock is put in this
    descriptor. This level of specificity could be dangerous, allowing an
    adversary to correlate it with other data. At best, it's unnecessary.
    
    Every eight hours, the descriptor ID will change, resulting in a different
    selection of service directory nodes. This selection may also vary slightly
    when the consensus changes (and HSDir nodes are added or removed). Notably,
    this means that the next published descriptor will go to a new directory.
    
    Directories cache all descriptors for three days from when they arrived.
    Descriptors for a hidden service over the past three days are available
    retroactively in 8-hour intervals, or potentially more if the selection
    of directories changed during an 8-hour period.
    
    One potential approach would be to use a timestamp from the consensus for
    these IDs. This would avoid issues with incorrect client clocks, and would
    ensure that the client is requesting a descriptor that corrosponds to the
    consensus it has (meaning, it will select the right directories to ask).